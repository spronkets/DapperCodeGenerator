@using DapperCodeGenerator.Core.Enumerations
@model DapperCodeGenerator.Web.Models.ApplicationState

@{
    ViewBag.Title = "";
    Layout = "_Layout";
}

<form class="mt-3" asp-controller="Databases" asp-action="Refresh" method="get">
    <div class="form-group">
        <label for="connectionType">Connection Type</label>
        <select class="form-control"
                id="connectionType"
                name="connectionType"
                asp-for="DbConnectionType"
                onchange="document.location.href = `/Databases/SelectConnectionType?connectionType=${this.options[this.selectedIndex].value}`;">
            <option>@DbConnectionTypes.MsSql</option>
            <option>@DbConnectionTypes.Postgres</option>
            <option>@DbConnectionTypes.Oracle</option>
            <option>@DbConnectionTypes.MySql</option>
        </select>
    </div>
    <div class="form-group">
        <label for="connectionString">Connection String</label>
        <input class="form-control" id="connectionString" name="connectionString" placeholder="@Model.ConnectionString" value="@Model.ConnectionString">
    </div>
    <button type="submit" class="btn btn-primary">Connect</button>
</form>

@if (Model.Databases?.Count == 0)
{
    <div class="mt-5 alert alert-warning" role="alert">
        No databases found. If you know the server you are connecting to has databases, this may be due to an invalid connection string.
    </div>
}

@if (Model.Databases?.Count > 0)
{
    <h3 class="mt-5">Database(s)</h3>

    <select class="form-control"
            id="databaseSelect"
            name="databaseSelect"
            asp-for="SelectedDatabase.DatabaseName"
            asp-items="@(new SelectList(Model.Databases, "DatabaseName", "DatabaseName"))"
            onchange="document.location.href = `/Databases/SelectDatabase?databaseName=${this.options[this.selectedIndex].value}`;">
        <option>Select Database...</option>
    </select>
}

@if (Model.SelectedDatabase != null)
{
    <div class="mt-5">
        <span class="btn-group btn-group-sm float-right">
            <partial name="Partials/DataModels/_GeneratedTablesDataModelsModal" model="Model.SelectedDatabase" />
            <partial name="Partials/Dapper/_GeneratedTablesDapperModal" model="Model.SelectedDatabase" />
        </span>
        <h4><strong>@Model.SelectedDatabase.DatabaseName</strong> Database</h4>
    </div>

    @if (Model.SelectedDatabase.Tables.Count == 0)
    {
        <p>No tables found within <strong>@Model.SelectedDatabase.DatabaseName</strong>. If there are tables, try refreshing.</p>
    }

    <table class="table table-striped table-bordered table-hover">
        <thead class="thead-light">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Table Name</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 1; i <= Model.SelectedDatabase.Tables.Count; i++)
            {
                var table = Model.SelectedDatabase.Tables[i - 1];

                <tr>
                    <th class="align-middle" scope="row">@i</th>
                    <td>
                        <span class="align-middle">@table.TableName</span>
                        <span class="btn-group btn-group-sm float-right">
                            <partial name="Partials/DataModels/_GeneratedTableDataModelModal" model="table" />
                            <partial name="Partials/Dapper/_GeneratedTableDapperModal" model="table" />
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}